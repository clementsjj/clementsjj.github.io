{"data":{"markdownRemark":{"html":"<hr>\n<p>This is the first blog post.\nIt's a beautiful thing.\nBelow is some information about running Gatsby.</p>\n<h5>Terminal</h5>\n<pre><code class=\"language-shell\">gatsby new mysite https://github.com/gatsbyjs/gatsby-starter-default\ncd mysite\nnpm i bootstrap jquery popper.js\ntouch src/components/main.css\nmkdir src/templates\ntouch blog-post.js\n</code></pre>\n<h5>Install Dependencies</h5>\n<pre><code class=\"language-shell\">npm i gatsby-source-filesystem gatsby-transformer-remark\n</code></pre>\n<h5>gatsby-config.js</h5>\n<pre><code class=\"language-js\">plugins: [\n  `gatsby-plugin-react-helmet`,\n  `gatsby-transformer-remark`,\n  {\n    resolve: `gatsby-source-filesystem`,\n    options: {\n      name: 'src',\n      path: `${__dirname}/src/`,\n    },\n  },\n]\n</code></pre>\n<h5>gatsby-node.js</h5>\n<pre><code class=\"language-js\">const { createFilePath } = require('gatsby-source-filesystem')\nconst path = require('path')\n\nexports.onCreateNode = ({ node, getNode, boundActionCreators }) => {\n  const { createNodeField } = boundActionCreators\n\n  if (node.internal.type === `MarkdownRemark`) {\n    const slug = createFilePath({ node, getNode, basePath: 'pages' })\n    createNodeField({\n      node,\n      name: 'slug',\n      value: slug,\n    })\n\n    // const fileNode = getNode(node.parent);\n    // console.log(`\\n`, fileNode.relativePath);\n  }\n}\n\nexports.createPages = ({ graphql, boundActionCreators }) => {\n  const { createPage } = boundActionCreators\n  return new Promise((resolve, reject) => {\n    graphql(`\n      {\n        allMarkdownRemark {\n          edges {\n            node {\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `).then(result => {\n      result.data.allMarkdownRemark.edges.forEach(({ node }) => {\n        createPage({\n          path: node.fields.slug,\n          component: path.resolve('./src/templates/blog-post.js'),\n          context: {\n            slug: node.fields.slug,\n          },\n        })\n      })\n\n      resolve()\n    })\n  })\n}\n</code></pre>\n<h5>In templates/blog-post.js</h5>\n<pre><code class=\"language-js\">import React from 'react'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n\n  return (\n    &#x3C;div\n      style={{\n        color: 'black',\n      }}\n    >\n      &#x3C;h1>{post.frontmatter.title}&#x3C;/h1>\n      &#x3C;div dangerouslySetInnerHTML={{ __html: post.html }} />\n    &#x3C;/div>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n</code></pre>\n<h5>In main.css</h5>\n<pre><code class=\"language-css\">.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n</code></pre>\n<h5>In layout.js: <code>import './main.css'</code></h5>\n<h5>In div properties, add <code>classname=\"container\"</code></h5>","frontmatter":{"title":"Welcome"}}},"pageContext":{"slug":"/blog/welcome/"}}