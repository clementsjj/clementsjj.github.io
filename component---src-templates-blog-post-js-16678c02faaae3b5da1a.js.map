{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/components/Navbar/Navbar.js","webpack:///./src/components/layout.js","webpack:///./src/components/Homebody/HomebodyTwo.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_components_Homebody_HomebodyTwo__WEBPACK_IMPORTED_MODULE_4__","_ref","data","location","post","markdownRemark","a","createElement","container","Column","frontmatter","title","dangerouslySetInnerHTML","__html","html","window","pathname","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","siteMetadata","description","siteUrl","author","twitter","adsense","plugins","resolve","options","name","short_name","start_url","background_color","theme_color","display","icon","path","__dirname","styleColor","backgroundColor","Navbar","_this","_Component","call","this","handleMenuClose","setState","anchorEl","handleMobileMenuClose","handleMobileMenuOpen","event","mobileMoreAnchorEl","currentTarget","state","isShown","selectedIndex","handlePageNavigation","componentDidMount","console","log","_this2","classes","_this$state","isMobileMenuOpen","Boolean","renderMobileMenu","react_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","gatsby_browser_entry","to","className","Button_default","style","margin","grow","color","variant","root","AppBar_default","position","Toolbar_default","Typography_default","sectionDesktop","onClick","marginLeft","disabled","sectionMobile","IconButton_default","aria-haspopup","MoreVert_default","Component","withStyles","theme","_title","_sectionDesktop","_sectionMobile","flexGrow","width","menuButton","marginRight","fontFamily","fontSize","breakpoints","up","Layout","_this$props","Helmet_default","meta","content","lang","components_Navbar_Navbar","node","Homebody","react__WEBPACK_IMPORTED_MODULE_1___default","evergreen_ui__WEBPACK_IMPORTED_MODULE_2__","elevation","justifyContent","gatsby__WEBPACK_IMPORTED_MODULE_4__","evergreen_ui__WEBPACK_IMPORTED_MODULE_3__","SegmentGroup","compact","piled","raised","size","stacked","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","extends_default","lib","isNil","handledProps","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","Group","Inline"],"mappings":"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","file":"component---src-templates-blog-post-js-16678c02faaae3b5da1a.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport HomebodyTwo from '../components/Homebody/HomebodyTwo'\n\nexport default ({ data, location }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Layout location={location}>\n      <Grid container>\n        <Grid.Column>\n          <Segment>\n            {/* <div\n          style={{\n            padding: '2rem 5rem',\n            margin: 0,\n            width: '100%',\n            backgroundColor: 'white',\n            color: 'black',\n          }}\n        > */}\n            <h1>{post.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            {/* </div> */}\n            {typeof window !== 'undefined' &&\n            window.location.pathname == '/about-this-site/' ? (\n              <HomebodyTwo />\n            ) : (\n              'Nothing to Display'\n            )}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  //pathPrefix: '/',\n  siteMetadata: {\n    title: 'Internet Home of JJ Clements',\n    description: 'Landing Page for JJ Clements',\n    siteUrl: 'https://www.clementsjj.com',\n    author: 'clementsjj',\n    twitter: 'clementsjj',\n    adsense: '',\n  },\n  plugins: [\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-default',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/icons/dancer.svg', // This path is relative to the root of the site.\n      },\n    },\n    'gatsby-plugin-offline',\n    `gatsby-transformer-remark`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: 'src',\n        path: `${__dirname}/src/`,\n      },\n    },\n  ],\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport './navbar.css'\n\n// let window = {}\n// window.location = {}\n// window.location.pathname = '/'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block',\n    fontFamily: 'Lato',\n    fontSize: '.7rem',\n    [theme.breakpoints.up('sm')]: { display: 'block', fontSize: '1.5rem' },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: { display: 'flex' },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: { display: 'none' },\n  },\n})\n\nconst styleColor = {\n  // height: '8vh'\n  //backgroundColor: '#1f8714',\n  backgroundColor: '#00008b',\n}\n//let path = this.props.location ? this.props.location.pathname : '/'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isShown: false,\n      selectedIndex: 0,\n      anchorEl: null,\n      mobileMoreAnchorEl: null,\n      path: '/',\n    }\n  }\n\n  handlePageNavigation() {}\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null })\n    this.handleMobileMenuClose()\n  }\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget })\n  }\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null })\n  }\n\n  componentDidMount() {\n    // console.log('Navbar Props: ', this.props)\n    //console.log(`Navbar Location: `, this.props.location)\n    //console.log(`Navbar Location.pathname: `, this.props.location.pathname)\n    console.log(`Window.location.pathname: `, window.location)\n  }\n\n  render() {\n    //let location = {}\n    //location.pathname = '/'\n\n    //console.log('Default Location: ', location)\n    const { classes } = this.props\n    const { location } = this.props\n    //console.log('New Location :', location)\n\n    const { anchorEl, mobileMoreAnchorEl } = this.state\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n    //console.log('Location-Navbar-Render: ', location)\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <Link to=\"/\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              className={classes.grow}\n              color={'primary'}\n              variant=\"outlined\"\n              //variant={location.pathname === '/' ? 'contained' : 'outlined'}\n            >\n              Home\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/about\" className=\"nav\">\n            <Button\n              className={classes.grow}\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={\n              //   location.pathname === '/about' ? 'contained' : 'outlined'\n              // }\n            >\n              About\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/blog\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={location.pathname === '/blog' ? 'contained' : 'outlined'}\n            >\n              Blog\n            </Button>\n          </Link>\n        </MenuItem>\n      </Menu>\n    )\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar style={styleColor}>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n              {'{JJ_Clements}'}\n              {/* {location.pathname === '/'\n                ? 'The Internet Home of { JJ_Clements }'\n                : '{ JJ_Clements }'} */}\n            </Typography>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link to=\"/\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  className={classes.grow}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  // variant={\n                  //   window != undefined && window.location.pathname === '/'\n                  //     ? 'contained'\n                  //     : 'outlined'\n                  // }\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  Home\n                </Button>\n              </Link>\n              <Link to=\"/about\" className=\"nav\">\n                <Button\n                  className={classes.grow}\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/about'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  About\n                </Button>\n              </Link>\n              <Link to=\"/blog\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/blog'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Blog\n                </Button>\n              </Link>\n              <Button\n                style={{ margin: 5, marginLeft: 20 }}\n                disabled\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setState({ isShown: true })}\n              >\n                Dashboard\n              </Button>\n            </div>\n\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n            {/* <Link to=\"/\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                className={classes.grow}\n                color={'primary'}\n                variant={location.pathname === '/' ? 'contained' : 'outlined'}\n              >\n                Home\n              </Button>\n            </Link>\n            <Link to=\"/about\" className=\"nav\">\n              <Button\n                className={classes.grow}\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/about' ? 'contained' : 'outlined'\n                }\n              >\n                About\n              </Button>\n            </Link>\n            <Link to=\"/blog\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/blog' ? 'contained' : 'outlined'\n                }\n              >\n                Blog\n              </Button>\n            </Link>\n            <Button\n              style={{ margin: 5, marginLeft: 20 }}\n              disabled\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={() => this.setState({ isShown: true })}\n            >\n              Dashboard\n            </Button> */}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './layout.css'\nimport Navbar from './Navbar/Navbar'\nimport { siteMetadata } from '../../gatsby-config'\n\nexport default class Layout extends Component {\n  render() {\n    const { children, color } = this.props\n\n    const style = {\n      backgroundColor: color,\n    }\n    return (\n      <div style={style}>\n        <Helmet\n          title={'Internet Home of JJ'}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n          <style>{`body { background-color: ${color}; }`}</style>\n        </Helmet>\n        <Navbar {...this.props} />\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        {/* <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div> */}\n        {children}\n      </div>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n// const Layout = ({ children }) => (\n//   <StaticQuery\n//     query={graphql`\n//       query SiteTitleQuery {\n//         site {\n//           siteMetadata {\n//             title\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={'Internet Home of JJ'}\n//           meta={[\n//             { name: 'description', content: 'Sample' },\n//             { name: 'keywords', content: 'sample, something' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//         </Helmet>\n//         <Navbar {...this.props} />\n//         {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n//         {/* <div\n//           style={{\n//             margin: '0 auto',\n//             maxWidth: 960,\n//             padding: '0px 1.0875rem 1.45rem',\n//             paddingTop: 0,\n//           }}\n//         >\n//           {children}\n//         </div> */}\n//         {children}\n//       </>\n//     )}\n//   />\n// )\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\n// export default Layout\n","import React, { Component } from 'react'\nimport { Pane, Button } from 'evergreen-ui'\nimport { Link } from 'gatsby'\n\nexport default class Homebody extends Component {\n  render() {\n    const outerPaneStyle = {\n      display: 'flex',\n      margin: 10,\n      justifyContent: 'space-around',\n    }\n    const innerPaneStyle = {\n      width: '40vw',\n      height: '40vh',\n      //border: '1px solid blue',\n      elevation: 2,\n      margin: 20,\n      padding: 20,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    const iconContainer = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    const iconStyle = {\n      height: 50,\n      width: 'auto',\n      margin: 10,\n    }\n\n    return (\n      <Pane elevation={1} style={outerPaneStyle}>\n        {/* <Pane elevation={4} style={innerPaneStyle}>\n          <Pane style={iconContainer} elevation={2}>\n            \n          </Pane>\n          <br />\n          <Pane style={iconContainer} elevation={2}>\n            \n          </Pane>\n        </Pane>\n        <Pane elevation={4} style={innerPaneStyle}>\n          <h2>Brief Ish About Me</h2>\n          <h5>Fullstack Ish</h5>\n          <h5>Veteran Ish</h5>\n          <h5>University of Wisconsin Ish</h5>\n          <h5>New York City Ish</h5>\n          <h6>More About Me</h6>\n        </Pane> */}\n        <Link to=\"/my-files\" className=\"nav\">\n          <Button style={{ margin: 5 }} color={'primary'}>\n            Website Files\n          </Button>\n        </Link>\n        <Link to=\"/markdown-files\" className=\"nav\">\n          <Button style={{ margin: 5 }} color={'primary'}>\n            Markdown Files\n          </Button>\n        </Link>\n      </Pane>\n    )\n  }\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;"],"sourceRoot":""}