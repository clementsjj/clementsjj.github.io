{"version":3,"sources":["webpack:///./src/pages/blog.1.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/components/Navbar/Navbar.js","webpack:///./src/components/layout.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/semantic-ui-react/dist/es/lib/shallowEqual.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack:///./node_modules/semantic-ui-react/dist/es/addons/Responsive/Responsive.js"],"names":["__webpack_exports__","_ref","data","location","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","color","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","container","Column","computer","mobile","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","as","Segment","minWidth","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","allMarkdownRemark","totalCount","style","width","edges","map","_ref2","index","node","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","key","to","fields","slug","textDecoration","frontmatter","title","date","excerpt","query","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","siteMetadata","description","siteUrl","author","twitter","github","linkedin","instagram","adsense","plugins","resolve","options","name","short_name","start_url","background_color","theme_color","display","icon","path","__dirname","styleColor","backgroundColor","Navbar","_this","_Component","call","this","handleMenuClose","setState","anchorEl","handleMobileMenuClose","handleMobileMenuOpen","event","mobileMoreAnchorEl","currentTarget","state","isShown","selectedIndex","handlePageNavigation","componentDidMount","console","log","window","_this2","classes","_this$state","isMobileMenuOpen","Boolean","renderMobileMenu","react_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","gatsby_browser_entry","className","Button_default","margin","grow","variant","root","AppBar_default","position","Toolbar_default","Typography_default","sectionDesktop","onClick","marginLeft","disabled","sectionMobile","IconButton_default","aria-haspopup","MoreVert_default","Component","withStyles","theme","_title","_sectionDesktop","_sectionMobile","flexGrow","menuButton","marginRight","fontFamily","fontSize","breakpoints","up","Layout","_this$props","Helmet_default","meta","content","lang","components_Navbar_Navbar","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","GridColumn","floated","largeScreen","only","stretched","tablet","textAlign","verticalAlign","widescreen","rest","ElementType","handledProps","create","GridRow","centered","columns","divided","reversed","classnames_default","classNameBuilders","getUnhandledProps","getElementType","extends_default","Grid_GridRow","Grid","celled","doubling","inverted","padded","relaxed","stackable","Row","shallowequal__WEBPACK_IMPORTED_MODULE_0__","shallowequal__WEBPACK_IMPORTED_MODULE_0___default","SegmentGroup","compact","piled","raised","size","stacked","lib","isNil","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","attached","basic","circular","clearing","loading","placeholder","secondary","tertiary","Group","Inline","Responsive","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default","lodash_isNil__WEBPACK_IMPORTED_MODULE_8__","lodash_isNil__WEBPACK_IMPORTED_MODULE_8___default","lodash_invoke__WEBPACK_IMPORTED_MODULE_9__","lodash_invoke__WEBPACK_IMPORTED_MODULE_9___default","react__WEBPACK_IMPORTED_MODULE_11__","react__WEBPACK_IMPORTED_MODULE_11___default","_lib__WEBPACK_IMPORTED_MODULE_12__","_lib__WEBPACK_IMPORTED_MODULE_13__","_lib__WEBPACK_IMPORTED_MODULE_14__","_lib__WEBPACK_IMPORTED_MODULE_15__","_lib__WEBPACK_IMPORTED_MODULE_16__","_getPrototypeOf2","_len","arguments","length","_args","Array","_key","apply","concat","maxWidth","mounted","fitsMinWidth","fitsMaxWidth","e","ticking","requestAnimationFrame","handleUpdate","setSafeState","value","fireOnMount","sub","handleResize","target","unsub","nextProps","nextState","isVisible","getWidth","innerWidth"],"mappings":"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","file":"component---src-pages-blog-1-js-d1770b9cba0f810b8bab.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Layout from '../components/layout'\nimport { Grid, Segment, Responsive } from 'semantic-ui-react'\n\nconst style = {\n  textDecoration: 'none',\n  color: 'black',\n}\n\nexport default ({ data, location }) => {\n  return (\n    <Layout location={location} color={'#f0f8ff'}>\n      <Grid container>\n        <Grid.Column computer={4} mobile={16}>\n          <Responsive as={Segment} minWidth={768}>\n            Placeholder\n          </Responsive>\n          {/* <Segment>Placeholder</Segment> */}\n        </Grid.Column>\n        <Grid.Column computer={12} mobile={16}>\n          <Segment>\n            {/* <div\n            style={{\n              margin: '0 auto',\n              maxWidth: 960,\n              padding: '0px 1.0875rem 1.45rem',\n              paddingTop: '1.45rem',\n              border: '1px solid black',\n            }}\n          > */}\n            <h1>Blog</h1>\n            {/* <hr /> */}\n            <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n            <hr style={{ width: '20%' }} />\n            {data.allMarkdownRemark.edges.map(({ node }, index) => (\n              <Link\n                key={index}\n                to={node.fields.slug}\n                style={{ textDecoration: 'none', color: 'inherit' }}\n              >\n                <h3>{node.frontmatter.title}</h3>\n                <p>\n                  <span>\n                    <em>- {node.frontmatter.date}</em>\n                  </span>\n                </p>\n                <p>{node.excerpt}</p>\n              </Link>\n            ))}\n            {/* </div> */}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query blogdumb {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  //pathPrefix: '/',\n  siteMetadata: {\n    title: 'Internet Home of JJ Clements',\n    description: 'Landing Page for JJ Clements',\n    siteUrl: 'https://www.clementsjj.com',\n    author: 'clementsjj',\n    twitter: 'https://twitter.com/clementsjj',\n    github: 'https://github.com/clementsjj',\n    linkedin: 'https://www.linkedin.com/in/john-clements-084a1811a/',\n    instagram: 'https://www.instagram.com/jj4bucky/',\n    adsense: '',\n  },\n  plugins: [\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-default',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/icons/dancer.svg', // This path is relative to the root of the site.\n      },\n    },\n    'gatsby-plugin-offline',\n    `gatsby-transformer-remark`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: 'src',\n        path: `${__dirname}/src/`,\n      },\n    },\n  ],\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport './navbar.css'\n\n// let window = {}\n// window.location = {}\n// window.location.pathname = '/'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block',\n    fontFamily: 'Lato',\n    fontSize: '.7rem',\n    [theme.breakpoints.up('sm')]: { display: 'block', fontSize: '1.5rem' },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: { display: 'flex' },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: { display: 'none' },\n  },\n})\n\nconst styleColor = {\n  // height: '8vh'\n  //backgroundColor: '#1f8714',\n  backgroundColor: '#00008b',\n}\n//let path = this.props.location ? this.props.location.pathname : '/'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isShown: false,\n      selectedIndex: 0,\n      anchorEl: null,\n      mobileMoreAnchorEl: null,\n      path: '/',\n    }\n  }\n\n  handlePageNavigation() {}\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null })\n    this.handleMobileMenuClose()\n  }\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget })\n  }\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null })\n  }\n\n  componentDidMount() {\n    // console.log('Navbar Props: ', this.props)\n    //console.log(`Navbar Location: `, this.props.location)\n    //console.log(`Navbar Location.pathname: `, this.props.location.pathname)\n    console.log(`Window.location.pathname: `, window.location)\n  }\n\n  render() {\n    //let location = {}\n    //location.pathname = '/'\n\n    //console.log('Default Location: ', location)\n    const { classes } = this.props\n    const { location } = this.props\n    //console.log('New Location :', location)\n\n    const { anchorEl, mobileMoreAnchorEl } = this.state\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n    //console.log('Location-Navbar-Render: ', location)\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <Link to=\"/\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              className={classes.grow}\n              color={'primary'}\n              variant=\"outlined\"\n              //variant={location.pathname === '/' ? 'contained' : 'outlined'}\n            >\n              Home\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/about\" className=\"nav\">\n            <Button\n              className={classes.grow}\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={\n              //   location.pathname === '/about' ? 'contained' : 'outlined'\n              // }\n            >\n              About\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/blog\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={location.pathname === '/blog' ? 'contained' : 'outlined'}\n            >\n              Blog\n            </Button>\n          </Link>\n        </MenuItem>\n      </Menu>\n    )\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar style={styleColor}>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n              {'{JJ_Clements}'}\n              {/* {location.pathname === '/'\n                ? 'The Internet Home of { JJ_Clements }'\n                : '{ JJ_Clements }'} */}\n            </Typography>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link to=\"/\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  className={classes.grow}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  // variant={\n                  //   window != undefined && window.location.pathname === '/'\n                  //     ? 'contained'\n                  //     : 'outlined'\n                  // }\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  Home\n                </Button>\n              </Link>\n              <Link to=\"/about\" className=\"nav\">\n                <Button\n                  className={classes.grow}\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/about'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  About\n                </Button>\n              </Link>\n              <Link to=\"/blog\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/blog'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Blog\n                </Button>\n              </Link>\n              <Link to=\"/projects\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/projects'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Projects\n                </Button>\n              </Link>\n              <Link to=\"/gists\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/gists'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Gists\n                </Button>\n              </Link>\n              <Button\n                style={{ margin: 5, marginLeft: 20 }}\n                disabled\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setState({ isShown: true })}\n              >\n                Dashboard\n              </Button>\n            </div>\n\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n            {/* <Link to=\"/\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                className={classes.grow}\n                color={'primary'}\n                variant={location.pathname === '/' ? 'contained' : 'outlined'}\n              >\n                Home\n              </Button>\n            </Link>\n            <Link to=\"/about\" className=\"nav\">\n              <Button\n                className={classes.grow}\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/about' ? 'contained' : 'outlined'\n                }\n              >\n                About\n              </Button>\n            </Link>\n            <Link to=\"/blog\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/blog' ? 'contained' : 'outlined'\n                }\n              >\n                Blog\n              </Button>\n            </Link>\n            <Button\n              style={{ margin: 5, marginLeft: 20 }}\n              disabled\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={() => this.setState({ isShown: true })}\n            >\n              Dashboard\n            </Button> */}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './layout.css'\nimport Navbar from './Navbar/Navbar'\nimport { siteMetadata } from '../../gatsby-config'\n\nexport default class Layout extends Component {\n  render() {\n    const { children, color } = this.props\n\n    const style = {\n      backgroundColor: color,\n    }\n    return (\n      <div style={style}>\n        <Helmet\n          title={'Internet Home of JJ'}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n          <style>{`body { background-color: ${color}; }`}</style>\n        </Helmet>\n        <Navbar {...this.props} />\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        {/* <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div> */}\n        {children}\n      </div>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n// const Layout = ({ children }) => (\n//   <StaticQuery\n//     query={graphql`\n//       query SiteTitleQuery {\n//         site {\n//           siteMetadata {\n//             title\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={'Internet Home of JJ'}\n//           meta={[\n//             { name: 'description', content: 'Sample' },\n//             { name: 'keywords', content: 'sample, something' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//         </Helmet>\n//         <Navbar {...this.props} />\n//         {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n//         {/* <div\n//           style={{\n//             margin: '0 auto',\n//             maxWidth: 960,\n//             padding: '0px 1.0875rem 1.45rem',\n//             paddingTop: 0,\n//           }}\n//         >\n//           {children}\n//         </div> */}\n//         {children}\n//       </>\n//     )}\n//   />\n// )\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\n// export default Layout\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import shallowEqual from 'shallowequal';\nexport default shallowEqual;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { customPropTypes, eventStack, getElementType, getUnhandledProps, isBrowser, shallowEqual } from '../../lib';\n/**\n * Responsive can control visibility of content.\n */\n\nvar Responsive =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Responsive, _Component);\n\n  function Responsive() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Responsive);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Responsive)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"fitsMaxWidth\", function () {\n      var maxWidth = _this.props.maxWidth;\n      var width = _this.state.width;\n      return _isNil(maxWidth) ? true : width <= maxWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"fitsMinWidth\", function () {\n      var minWidth = _this.props.minWidth;\n      var width = _this.state.width;\n      return _isNil(minWidth) ? true : width >= minWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setSafeState\", function () {\n      var _this2;\n\n      return _this.mounted && (_this2 = _this).setState.apply(_this2, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isVisible\", function () {\n      return _this.fitsMinWidth() && _this.fitsMaxWidth();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResize\", function (e) {\n      if (_this.ticking) return;\n      _this.ticking = true;\n      requestAnimationFrame(function () {\n        return _this.handleUpdate(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleUpdate\", function (e) {\n      _this.ticking = false;\n\n      var width = _invoke(_this.props, 'getWidth');\n\n      _this.setSafeState({\n        width: width\n      });\n\n      _invoke(_this.props, 'onUpdate', e, _objectSpread({}, _this.props, {\n        width: width\n      }));\n    });\n\n    _this.state = {\n      width: _invoke(_this.props, 'getWidth')\n    };\n    return _this;\n  }\n\n  _createClass(Responsive, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var fireOnMount = this.props.fireOnMount;\n      this.mounted = true;\n      eventStack.sub('resize', this.handleResize, {\n        target: 'window'\n      });\n      if (fireOnMount) this.handleUpdate();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      eventStack.unsub('resize', this.handleResize, {\n        target: 'window'\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Update when any prop changes or the width changes. If width does not change, no update is required.\n      return this.state.width !== nextState.width || !shallowEqual(this.props, nextProps);\n    } // ----------------------------------------\n    // Helpers\n    // ----------------------------------------\n\n  }, {\n    key: \"render\",\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n    value: function render() {\n      var children = this.props.children;\n      var ElementType = getElementType(Responsive, this.props);\n      var rest = getUnhandledProps(Responsive, this.props);\n      if (this.isVisible()) return React.createElement(ElementType, rest, children);\n      return null;\n    }\n  }]);\n\n  return Responsive;\n}(Component);\n\n_defineProperty(Responsive, \"defaultProps\", {\n  getWidth: function getWidth() {\n    return isBrowser() ? window.innerWidth : 0;\n  }\n});\n\n_defineProperty(Responsive, \"onlyMobile\", {\n  minWidth: 320,\n  maxWidth: 767\n});\n\n_defineProperty(Responsive, \"onlyTablet\", {\n  minWidth: 768,\n  maxWidth: 991\n});\n\n_defineProperty(Responsive, \"onlyComputer\", {\n  minWidth: 992\n});\n\n_defineProperty(Responsive, \"onlyLargeScreen\", {\n  minWidth: 1200,\n  maxWidth: 1919\n});\n\n_defineProperty(Responsive, \"onlyWidescreen\", {\n  minWidth: 1920\n});\n\n_defineProperty(Responsive, \"handledProps\", [\"as\", \"children\", \"fireOnMount\", \"getWidth\", \"maxWidth\", \"minWidth\", \"onUpdate\"]);\n\nexport { Responsive as default };\nResponsive.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Fires callbacks immediately after mount. */\n  fireOnMount: PropTypes.bool,\n\n  /**\n   * Called to get width of screen. Defaults to using `window.innerWidth` when in a browser;\n   * otherwise, assumes a width of 0.\n   */\n  getWidth: PropTypes.func,\n\n  /** The maximum width at which content will be displayed. */\n  maxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The minimum width at which content will be displayed. */\n  minWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called on update.\n   *\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onUpdate: PropTypes.func\n} : {};"],"sourceRoot":""}