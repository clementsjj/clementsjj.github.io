{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/components/Navbar/Navbar.js","webpack:///./src/components/layout.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js","webpack:///./src/images/mbdb.png","webpack:///./src/images/thekitchen.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_images_mbdb_png__WEBPACK_IMPORTED_MODULE_6__","_images_mbdb_png__WEBPACK_IMPORTED_MODULE_6___default","_images_thekitchen_png__WEBPACK_IMPORTED_MODULE_7__","_images_thekitchen_png__WEBPACK_IMPORTED_MODULE_7___default","Projects","_ref","location","a","createElement","color","style","display","justifyContent","href","target","margin","src","mbdb","Header","textAlign","Content","Description","thekitchen","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","siteMetadata","title","description","siteUrl","author","twitter","github","linkedin","instagram","adsense","plugins","resolve","options","name","short_name","start_url","background_color","theme_color","icon","path","__dirname","styleColor","backgroundColor","Navbar","_this","_Component","call","this","handleMenuClose","setState","anchorEl","handleMobileMenuClose","handleMobileMenuOpen","event","mobileMoreAnchorEl","currentTarget","state","isShown","selectedIndex","handlePageNavigation","componentDidMount","console","log","window","_this2","classes","_this$state","isMobileMenuOpen","Boolean","renderMobileMenu","react_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","gatsby_browser_entry","to","className","Button_default","grow","variant","root","AppBar_default","position","Toolbar_default","Typography_default","sectionDesktop","onClick","marginLeft","disabled","sectionMobile","IconButton_default","aria-haspopup","MoreVert_default","Component","withStyles","theme","_title","_sectionDesktop","_sectionMobile","flexGrow","width","menuButton","marginRight","fontFamily","fontSize","breakpoints","up","Layout","_this$props","Helmet_default","meta","content","lang","components_Navbar_Navbar","node","CardDescription","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","extends_default","lib","isNil","handledProps","Card_CardDescription","CardHeader","Card_CardHeader","CardMeta","Card_CardMeta","CardContent","extra","header","factories","val","autoGenerateKey","Card_CardContent","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","map_default","item","key","join","Card_Card","Card_CardGroup","Card","_getPrototypeOf2","classCallCheck_default","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","concat","defineProperty_default","assertThisInitialized_default","e","inherits_default","createClass_default","value","fluid","image","link","raised","handleClick","Image","create","react","p"],"mappings":"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","file":"component---src-pages-projects-js-c9d219b4bf7330349ec6.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Card, Header, Container, Image } from 'semantic-ui-react'\nimport Layout from '../components/layout'\nimport mbdb from '../images/mbdb.png'\nimport thekitchen from '../images/thekitchen.png'\n\nconst Projects = ({ location }) => (\n  <Layout location={location} color={'#f0f8ff'}>\n    <Container style={{ display: 'flex', justifyContent: 'space-around' }}>\n      <Card\n        href=\"https://mbdb.netlify.com\"\n        target=\"_blank\"\n        style={{ margin: 10 }}\n      >\n        <Image src={mbdb} />\n        <Card.Header textAlign=\"center\">\n          Manhattan Bathroom Database\n        </Card.Header>\n        <Card.Content>\n          <Card.Description>\n            MBDB is a database of bathrooms in Manhattan.\n          </Card.Description>\n        </Card.Content>\n      </Card>\n\n      <Card\n        href=\"https://thekitchen.netlify.com\"\n        target=\"_blank\"\n        style={{ margin: 10 }}\n      >\n        <Image src={thekitchen} />\n        <Card.Header textAlign=\"center\">The Kitchen</Card.Header>\n        <Card.Header textAlign=\"center\">A Minimalist Recipe Finder</Card.Header>\n        <Card.Content>\n          <Card.Description>\n            This minimalist web app will find a recipe based on ingredients that\n            you enter.\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    </Container>\n  </Layout>\n)\n\nexport default Projects\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  //pathPrefix: '/',\n  siteMetadata: {\n    title: 'Internet Home of JJ Clements',\n    description: 'Landing Page for JJ Clements',\n    siteUrl: 'https://www.clementsjj.com',\n    author: 'clementsjj',\n    twitter: 'https://twitter.com/clementsjj',\n    github: 'https://github.com/clementsjj',\n    linkedin: 'https://www.linkedin.com/in/john-clements-084a1811a/',\n    instagram: 'https://www.instagram.com/jj4bucky/',\n    adsense: '',\n  },\n  plugins: [\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-default',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/icons/dancer.svg', // This path is relative to the root of the site.\n      },\n    },\n    'gatsby-plugin-offline',\n    `gatsby-transformer-remark`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: 'src',\n        path: `${__dirname}/src/`,\n      },\n    },\n  ],\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport './navbar.css'\n\n// let window = {}\n// window.location = {}\n// window.location.pathname = '/'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block',\n    fontFamily: 'Lato',\n    fontSize: '.7rem',\n    [theme.breakpoints.up('sm')]: { display: 'block', fontSize: '1.5rem' },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: { display: 'flex' },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: { display: 'none' },\n  },\n})\n\nconst styleColor = {\n  // height: '8vh'\n  //backgroundColor: '#1f8714',\n  backgroundColor: '#00008b',\n}\n//let path = this.props.location ? this.props.location.pathname : '/'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isShown: false,\n      selectedIndex: 0,\n      anchorEl: null,\n      mobileMoreAnchorEl: null,\n      path: '/',\n    }\n  }\n\n  handlePageNavigation() {}\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null })\n    this.handleMobileMenuClose()\n  }\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget })\n  }\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null })\n  }\n\n  componentDidMount() {\n    // console.log('Navbar Props: ', this.props)\n    //console.log(`Navbar Location: `, this.props.location)\n    //console.log(`Navbar Location.pathname: `, this.props.location.pathname)\n    console.log(`Window.location.pathname: `, window.location)\n  }\n\n  render() {\n    //let location = {}\n    //location.pathname = '/'\n\n    //console.log('Default Location: ', location)\n    const { classes } = this.props\n    const { location } = this.props\n    //console.log('New Location :', location)\n\n    const { anchorEl, mobileMoreAnchorEl } = this.state\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n    //console.log('Location-Navbar-Render: ', location)\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <Link to=\"/\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              className={classes.grow}\n              color={'primary'}\n              variant=\"outlined\"\n              //variant={location.pathname === '/' ? 'contained' : 'outlined'}\n            >\n              Home\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/about\" className=\"nav\">\n            <Button\n              className={classes.grow}\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={\n              //   location.pathname === '/about' ? 'contained' : 'outlined'\n              // }\n            >\n              About\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/blog\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={location.pathname === '/blog' ? 'contained' : 'outlined'}\n            >\n              Blog\n            </Button>\n          </Link>\n        </MenuItem>\n      </Menu>\n    )\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar style={styleColor}>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n              {'{JJ_Clements}'}\n              {/* {location.pathname === '/'\n                ? 'The Internet Home of { JJ_Clements }'\n                : '{ JJ_Clements }'} */}\n            </Typography>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link to=\"/\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  className={classes.grow}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  // variant={\n                  //   window != undefined && window.location.pathname === '/'\n                  //     ? 'contained'\n                  //     : 'outlined'\n                  // }\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  Home\n                </Button>\n              </Link>\n              <Link to=\"/about\" className=\"nav\">\n                <Button\n                  className={classes.grow}\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/about'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                  onClick={this.handlePageNavigation}\n                >\n                  About\n                </Button>\n              </Link>\n              <Link to=\"/blog\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/blog'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Blog\n                </Button>\n              </Link>\n              <Link to=\"/projects\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/projects'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Projects\n                </Button>\n              </Link>\n              <Link to=\"/gists\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant={\n                    typeof window !== 'undefined' &&\n                    window.location.pathname == '/gists'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Gists\n                </Button>\n              </Link>\n              <Button\n                style={{ margin: 5, marginLeft: 20 }}\n                disabled\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setState({ isShown: true })}\n              >\n                Dashboard\n              </Button>\n            </div>\n\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n            {/* <Link to=\"/\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                className={classes.grow}\n                color={'primary'}\n                variant={location.pathname === '/' ? 'contained' : 'outlined'}\n              >\n                Home\n              </Button>\n            </Link>\n            <Link to=\"/about\" className=\"nav\">\n              <Button\n                className={classes.grow}\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/about' ? 'contained' : 'outlined'\n                }\n              >\n                About\n              </Button>\n            </Link>\n            <Link to=\"/blog\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/blog' ? 'contained' : 'outlined'\n                }\n              >\n                Blog\n              </Button>\n            </Link>\n            <Button\n              style={{ margin: 5, marginLeft: 20 }}\n              disabled\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={() => this.setState({ isShown: true })}\n            >\n              Dashboard\n            </Button> */}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './layout.css'\nimport Navbar from './Navbar/Navbar'\nimport { siteMetadata } from '../../gatsby-config'\n\nexport default class Layout extends Component {\n  render() {\n    const { children, color } = this.props\n\n    const style = {\n      backgroundColor: color,\n    }\n    return (\n      <div style={style}>\n        <Helmet\n          title={'Internet Home of JJ'}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n          <style>{`body { background-color: ${color}; }`}</style>\n        </Helmet>\n        <Navbar {...this.props} />\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        {/* <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div> */}\n        {children}\n      </div>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n// const Layout = ({ children }) => (\n//   <StaticQuery\n//     query={graphql`\n//       query SiteTitleQuery {\n//         site {\n//           siteMetadata {\n//             title\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={'Internet Home of JJ'}\n//           meta={[\n//             { name: 'description', content: 'Sample' },\n//             { name: 'keywords', content: 'sample, something' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//         </Helmet>\n//         <Navbar {...this.props} />\n//         {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n//         {/* <div\n//           style={{\n//             margin: '0 auto',\n//             maxWidth: 960,\n//             padding: '0px 1.0875rem 1.45rem',\n//             paddingTop: 0,\n//           }}\n//         >\n//           {children}\n//         </div> */}\n//         {children}\n//       </>\n//     )}\n//   />\n// )\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\n// export default Layout\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","module.exports = __webpack_public_path__ + \"static/mbdb-52431616cc563604fe957d2616fdec5f.png\";","module.exports = __webpack_public_path__ + \"static/thekitchen-724f873decb8b92db0981251e3d454c6.png\";"],"sourceRoot":""}