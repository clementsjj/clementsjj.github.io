{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Navbar/Navbar.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_ref","data","location","post","markdownRemark","a","createElement","container","Column","frontmatter","title","dangerouslySetInnerHTML","__html","html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","styleColor","backgroundColor","Navbar","state","isShown","selectedIndex","anchorEl","mobileMoreAnchorEl","handleMenuClose","_this","setState","handleMobileMenuClose","handleMobileMenuOpen","event","currentTarget","_this2","this","classes","_this$state","isMobileMenuOpen","Boolean","renderMobileMenu","react_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","gatsby_browser_entry","to","className","Button_default","style","margin","grow","color","variant","console","log","root","AppBar_default","position","Toolbar_default","Typography_default","sectionDesktop","pathname","marginLeft","disabled","onClick","sectionMobile","IconButton_default","aria-haspopup","MoreVert_default","Component","withStyles","theme","_title","_sectionDesktop","_sectionMobile","flexGrow","width","menuButton","marginRight","display","fontFamily","fontSize","breakpoints","up","Layout","_this$props","Helmet_default","meta","name","content","lang","components_Navbar_Navbar","node","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","siteMetadata","description","siteUrl","author","twitter","adsense","plugins","resolve","options","short_name","start_url","background_color","theme_color","icon","path","__dirname","GridColumn","computer","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","extends_default","handledProps","create","factories","Grid_GridColumn","GridRow","centered","columns","divided","reversed","Grid_GridRow","Grid","celled","doubling","inverted","padded","relaxed","stackable","Row","SegmentGroup","compact","piled","raised","size","stacked","lib","isNil","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","loading","placeholder","secondary","tertiary","Group","Inline"],"mappings":"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","file":"component---src-templates-blog-post-js-7db95b9e3641be540051.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nexport default ({ data, location }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Layout location={location}>\n      <Grid container>\n        <Grid.Column>\n          <Segment>\n            {/* <div\n          style={{\n            padding: '2rem 5rem',\n            margin: 0,\n            width: '100%',\n            backgroundColor: 'white',\n            color: 'black',\n          }}\n        > */}\n            <h1>{post.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            {/* </div> */}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport './navbar.css'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block',\n    fontFamily: 'Heletica',\n    fontSize: '.7rem',\n    [theme.breakpoints.up('sm')]: { display: 'block', fontSize: '1.5rem' },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: { display: 'flex' },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: { display: 'none' },\n  },\n})\n\nconst styleColor = {\n  // height: '8vh'\n  //backgroundColor: '#1f8714',\n  backgroundColor: '#00008b',\n}\n\nclass Navbar extends Component {\n  state = {\n    isShown: false,\n    selectedIndex: 0,\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n  }\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null })\n    this.handleMobileMenuClose()\n  }\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget })\n  }\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { location } = this.props\n    const { anchorEl, mobileMoreAnchorEl } = this.state\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <Link to=\"/\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              className={classes.grow}\n              color={'primary'}\n              variant=\"outlined\"\n              //variant={location.pathname === '/' ? 'contained' : 'outlined'}\n            >\n              Home\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/about\" className=\"nav\">\n            <Button\n              className={classes.grow}\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={\n              //   location.pathname === '/about' ? 'contained' : 'outlined'\n              // }\n            >\n              About\n            </Button>\n          </Link>\n        </MenuItem>\n        <MenuItem>\n          <Link to=\"/blog\" className=\"nav\">\n            <Button\n              style={{ margin: 5 }}\n              color={'primary'}\n              variant=\"outlined\"\n              // variant={location.pathname === '/blog' ? 'contained' : 'outlined'}\n            >\n              Blog\n            </Button>\n          </Link>\n        </MenuItem>\n      </Menu>\n    )\n\n    console.log('Navbar Props: ', this.props)\n    console.log(`Navbar Location: `, location)\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar style={styleColor}>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\n              {'{JJ_Clements}'}\n              {/* {location.pathname === '/'\n                ? 'The Internet Home of { JJ_Clements }'\n                : '{ JJ_Clements }'} */}\n            </Typography>\n\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link to=\"/\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  className={classes.grow}\n                  color={'primary'}\n                  //variant=\"outlined\"\n                  variant={\n                    this.props.location.pathname === '/'\n                      ? 'contained'\n                      : 'outlined'\n                  }\n                >\n                  Home\n                </Button>\n              </Link>\n              <Link to=\"/about\" className=\"nav\">\n                <Button\n                  className={classes.grow}\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant=\"outlined\"\n                  // variant={\n                  //   location.pathname === '/about' ? 'contained' : 'outlined'\n                  // }\n                >\n                  About\n                </Button>\n              </Link>\n              <Link to=\"/blog\" className=\"nav\">\n                <Button\n                  style={{ margin: 5 }}\n                  color={'primary'}\n                  variant=\"outlined\"\n                  // variant={\n                  //   location.pathname === '/blog' ? 'contained' : 'outlined'\n                  // }\n                >\n                  Blog\n                </Button>\n              </Link>\n              <Button\n                style={{ margin: 5, marginLeft: 20 }}\n                disabled\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={() => this.setState({ isShown: true })}\n              >\n                Dashboard\n              </Button>\n            </div>\n\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={this.handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n            {/* <Link to=\"/\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                className={classes.grow}\n                color={'primary'}\n                variant={location.pathname === '/' ? 'contained' : 'outlined'}\n              >\n                Home\n              </Button>\n            </Link>\n            <Link to=\"/about\" className=\"nav\">\n              <Button\n                className={classes.grow}\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/about' ? 'contained' : 'outlined'\n                }\n              >\n                About\n              </Button>\n            </Link>\n            <Link to=\"/blog\" className=\"nav\">\n              <Button\n                style={{ margin: 5 }}\n                color={'primary'}\n                variant={\n                  location.pathname === '/blog' ? 'contained' : 'outlined'\n                }\n              >\n                Blog\n              </Button>\n            </Link>\n            <Button\n              style={{ margin: 5, marginLeft: 20 }}\n              disabled\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={() => this.setState({ isShown: true })}\n            >\n              Dashboard\n            </Button> */}\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Navbar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport './layout.css'\nimport Navbar from './Navbar/Navbar'\nimport { siteMetadata } from '../../gatsby-config'\n\nexport default class Layout extends Component {\n  render() {\n    const { children, color } = this.props\n\n    const style = {\n      backgroundColor: color,\n    }\n    return (\n      <div style={style}>\n        <Helmet\n          title={'Internet Home of JJ'}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n          <style>{`body { background-color: ${color}; }`}</style>\n        </Helmet>\n        <Navbar {...this.props} />\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        {/* <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div> */}\n        {children}\n      </div>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n// const Layout = ({ children }) => (\n//   <StaticQuery\n//     query={graphql`\n//       query SiteTitleQuery {\n//         site {\n//           siteMetadata {\n//             title\n//           }\n//         }\n//       }\n//     `}\n//     render={data => (\n//       <>\n//         <Helmet\n//           title={'Internet Home of JJ'}\n//           meta={[\n//             { name: 'description', content: 'Sample' },\n//             { name: 'keywords', content: 'sample, something' },\n//           ]}\n//         >\n//           <html lang=\"en\" />\n//         </Helmet>\n//         <Navbar {...this.props} />\n//         {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n//         {/* <div\n//           style={{\n//             margin: '0 auto',\n//             maxWidth: 960,\n//             padding: '0px 1.0875rem 1.45rem',\n//             paddingTop: 0,\n//           }}\n//         >\n//           {children}\n//         </div> */}\n//         {children}\n//       </>\n//     )}\n//   />\n// )\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\n// export default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  //pathPrefix: '/',\n  siteMetadata: {\n    title: 'Internet Home of JJ Clements',\n    description: 'Landing Page for JJ Clements',\n    siteUrl: 'https://www.clementsjj.com',\n    author: 'clementsjj',\n    twitter: 'clementsjj',\n    adsense: '',\n  },\n  plugins: [\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-default',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/icons/dancer.svg', // This path is relative to the root of the site.\n      },\n    },\n    'gatsby-plugin-offline',\n    `gatsby-transformer-remark`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: 'src',\n        path: `${__dirname}/src/`,\n      },\n    },\n  ],\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;"],"sourceRoot":""}